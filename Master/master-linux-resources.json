 {
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "networkSettings": {
      "type": "object",
      "metadata": {
        "Description": "Network settings object"
      }
    },
    "masterSettings": {
      "type": "object",
      "metadata": {
        "Description": "master settings object"
      }
    },
    "masterOSSettings": {
      "type": "object",
      "metadata": {
        "Description": "master OS settings object"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "password for the Virtual Machine."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/eewolfe/azureHPC/master"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "PremiumStorageMap": {
      "none": {
        "size": 0,
        "nbDisk": 0
      },
      "P10": {
        "size": 128,
        "nbDisk": 1    
      },
      "P20": {
        "size": 512,
        "nbDisk": 1
      },
      "P30": {
        "size": 1023,
        "nbDisk": 1
      }
    },
    "nbDataDisks": "[variables('PremiumStorageMap')[parameters('masterSettings').dataDiskSize].nbDisk]",
    "diskSize": "[variables('PremiumStorageMap')[parameters('masterSettings').dataDiskSize].size]",
    "dataDiskArray": [
      {
        "diskSizeGB": "[variables('diskSize')]",
        "lun": "0",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('diskSize')]",
        "lun": "1",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('diskSize')]",
        "lun": "2",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('diskSize')]",
        "lun": "3",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('diskSize')]",
        "lun": "4",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('diskSize')]",
        "lun": "5",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('diskSize')]",
        "lun": "6",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('diskSize')]",
        "lun": "7",
        "createOption": "Empty"
      }
    ],
    "sshKeyPath": "[concat('/home/',parameters('masterOSSettings').adminUserName,'/.ssh/authorized_keys')]",
    "StorageTemplateURIChoice": {
      "none": {
        "uri": "[concat(parameters('_artifactsLocation'), 'Default/storage-none.json', parameters('_artifactsLocationSasToken'))]",
        "params": ""
      },
      "beegfs": {
        "uri": "[concat(parameters('_artifactsLocation'), 'BeeGFS/beegfs-script.json', parameters('_artifactsLocationSasToken'))]",
        "params": "[concat(parameters('masterSettings').Name, ' client')]"
      },
      "nfsonmaster": {
        "uri": "[concat(parameters('_artifactsLocation'), 'nfs/nfsonmaster.json', parameters('_artifactsLocationSasToken'))]",
        "params": ""
      }
    },
    "SchedulerTemplateURIChoice": {
      "none": {
        "uri": "[concat(parameters('_artifactsLocation'), 'Default/scheduler-none.json', parameters('_artifactsLocationSasToken'))]"
      },
      "pbspro": {
        "uri": "[concat(parameters('_artifactsLocation'), 'PBSPro/pbspro.json', parameters('_artifactsLocationSasToken'))]"
      }
    },
    "gangliaTemplateURI": "[concat(parameters('_artifactsLocation'), 'Ganglia/ganglia.json', parameters('_artifactsLocationSasToken'))]",
    "masterScriptTemplateURI": "[concat(parameters('_artifactsLocation'), 'Master/master-linux-script.json', parameters('_artifactsLocationSasToken'))]",
    "customScriptTemplateURI": "[concat(parameters('_artifactsLocation'), 'custom/custom-script.json', parameters('_artifactsLocationSasToken'))]",
    "deploymentApiVersion": "2016-09-01"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('masterSettings').Name]",
      "location": "[variables('location')]",
      "identity": { 
          "type": "SystemAssigned"
      },
      "apiVersion": "2017-03-30",
      "dependsOn": [
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('masterSettings').VMsku]"
        },
        "osProfile": {
          "computerName": "[parameters('masterSettings').Name]",
          "adminUsername": "[parameters('masterOSSettings').adminUserName]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('masterOSSettings').sshKeyData]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[parameters('masterOSSettings').imageReference]",
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage"
          },
          "dataDisks": "[take(variables('dataDiskArray'),variables('nbDataDisks'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('masterSettings').NicName)]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',parameters('masterSettings').DiagSAName,'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('masterSettings').Name,'/MSILinuxExtension')]",
      "apiVersion": "2017-03-30",
      "location": "[variables('location')]",
      "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('masterSettings').Name)]"
      ],
      "properties": {
          "publisher": "Microsoft.ManagedIdentity",
          "type": "ManagedIdentityExtensionForLinux",
          "typeHandlerVersion": "1.0",
          "autoUpgradeMinorVersion": true  ,
          "settings": {
              "port": 50342
          },
          "protectedSettings": {}
      }
    }, 
    {
      "name": "masterExtension",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('masterSettings').Name)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('masterScriptTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[parameters('masterSettings').Name]" },
          "customerStorageAccount": { "value": "[parameters('masterSettings').Name]" }
        }
      }
    },
    {
      "name": "ganglia",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "dependsOn": [
        "masterExtension"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('gangliaTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[parameters('masterSettings').Name]" },
          "masterName": { "value": "[parameters('masterSettings').Name]" }
        }
      }
    },
    {
      "name": "scheduler",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "dependsOn": [
        "ganglia"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('SchedulerTemplateURIChoice')[parameters('masterSettings').scheduler].uri]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[parameters('masterSettings').Name]" },
          "masterName": { "value": "[parameters('masterSettings').Name]" }
        }
      }
    },
    {
      "name": "storage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "dependsOn": [
        "scheduler"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('StorageTemplateURIChoice')[parameters('masterSettings').sharedStorage].uri]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[parameters('masterSettings').Name]" },
          "params": { "value": "[variables('StorageTemplateURIChoice')[parameters('masterSettings').sharedStorage].params]" }
        }
      }
    }
  ]
}
