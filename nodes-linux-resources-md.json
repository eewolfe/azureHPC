{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "nodeSettings": {
      "type": "object",
      "metadata": {
        "Description": "node settings object"
      }
    },
    "nodeOSSettings": {
      "type": "object",
      "metadata": {
        "Description": "node OS settings object"
      }
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (1000 or less)."
      },
      "defaultValue": 1,
      "maxValue": 1000
    },
    "newStorageAccountSuffix": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "password for the Virtual Machine."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "namingInfix": "[toLower(take(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 9))]",
    "vnetID": "[resourceId(parameters('nodeSettings').vnetRG, 'Microsoft.Network/virtualNetworks', parameters('nodeSettings').vnetName)]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('nodeSettings').subnetName)]",
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "computeApiVersion": "2016-04-30-preview",
    "networkApiVersion": "2016-03-30",
    "ScriptsOptions": {
      "none": {
        "params": ""
      },
      "nfsonmaster": {
        "params": " -S nfsonmaster"
      },
      "beegfs": {
        "params": " -S beegfs"
      },
      "pbspro": {
        "params": " -s pbspro"
      },
      "master": {
        "params": "[concat(' -m ', parameters('nodeSettings').MasterName)]"
      },
      "numberofusers": {
        "params": "[concat(' -n ', parameters('nodeSettings').numberofusers)]"
      }
    },
    "cnSetupScript": "cn-setup.sh",
    "vmScripts": {
      "scriptsToDownload": [
        "[uri(deployment().properties.templateLink.uri, variables('cnSetupScript'))]",
        "[uri(deployment().properties.templateLink.uri, 'BeeGFS/install_beegfs.sh')]",
        "[uri(deployment().properties.templateLink.uri, 'PBSPro/install_pbspro.sh')]",
        "[uri(deployment().properties.templateLink.uri, 'PBSPro/pbs_selfregister.sh')]",
        "[uri(deployment().properties.templateLink.uri, 'Ganglia/install_ganglia.sh')]", 
        "[uri(deployment().properties.templateLink.uri, 'custom/spi_p3_cn.sh')]"
      ],
      "commandToExecute": "[concat('bash ', variables('cnSetupScript'), variables('ScriptsOptions')['master'].params, variables('ScriptsOptions')[parameters('nodeSettings').scheduler].params, variables('ScriptsOptions')[parameters('nodeSettings').sharedStorage].params, variables('ScriptsOptions')['numberofusers'].params)]"
    },
    "sshKeyPath": "[concat('/home/',parameters('nodeOSSettings').adminUserName,'/.ssh/authorized_keys')]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "sku": {
        "name": "[parameters('nodeSettings').VMsku]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnetRef')]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('nodeOSSettings').adminUserName]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[variables('sshKeyPath')]",
                    "keyData": "[parameters('nodeOSSettings').sshKeyData]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "imageReference": "[parameters('nodeOSSettings').imageReference]",
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadOnly"
            },
            "dataDisks": []
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "installCN",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": "[variables('vmScripts').scriptsToDownload]",
                    "commandToExecute": "[variables('vmScripts').commandToExecute]",
                    "timestamp": 12345
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}
